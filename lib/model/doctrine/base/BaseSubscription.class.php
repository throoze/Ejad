<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Subscription', 'doctrine');

/**
 * BaseSubscription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $bulletin_type_id
 * @property User $User
 * @property BulletinType $BulletinType
 * 
 * @method integer      getUserId()           Returns the current record's "user_id" value
 * @method integer      getBulletinTypeId()   Returns the current record's "bulletin_type_id" value
 * @method User         getUser()             Returns the current record's "User" value
 * @method BulletinType getBulletinType()     Returns the current record's "BulletinType" value
 * @method Subscription setUserId()           Sets the current record's "user_id" value
 * @method Subscription setBulletinTypeId()   Sets the current record's "bulletin_type_id" value
 * @method Subscription setUser()             Sets the current record's "User" value
 * @method Subscription setBulletinType()     Sets the current record's "BulletinType" value
 * 
 * @package    Ejad
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubscription extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Subscription');
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('bulletin_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('BulletinType', array(
             'local' => 'bulletin_type_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}